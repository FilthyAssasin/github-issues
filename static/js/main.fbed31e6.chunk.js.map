{"version":3,"sources":["components/Pagination.js","App.js","components/paginate.js","reportWebVitals.js","index.js"],"names":["Pagination","itemsCount","pageSize","handlePageChange","currentPage","pages","Math","ceil","className","Array","map","e","i","onClick","App","useState","issues","setIssues","loading","setLoading","setItemsCount","setCurrentPage","issue","cloneDeep","startIndex","_","slice","take","value","paginate","useEffect","fetch","then","res","json","data","length","catch","console","log","style","textAlign","title","float","width","marginLeft","fontWeight","backgroundColor","labels","color","padding","borderRadius","name","comments","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA0BeA,EA1BI,SAAC,GAKb,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,YAEMC,EAAQC,KAAKC,KAAKN,EAAaC,GAErC,OACE,8BACE,oBAAIM,UAAU,aAAd,SACG,YAAIC,MAAMJ,IAAQK,KAAI,SAACC,EAAGC,GAAJ,OACrB,oBACEJ,UAAWI,IAAMR,EAAc,mBAAqB,YADtD,SAIE,mBAAGI,UAAU,YAAYK,QAAS,kBAAMV,EAAiBS,IAAzD,SACGA,EAAI,KAHFA,W,sCC6DFE,MApEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEiBF,oBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGuBJ,mBAAS,GAHhC,mBAGNd,EAHM,KAGMmB,EAHN,OAKyBL,mBAAS,GALlC,mBAKNX,EALM,KAKOiB,EALP,KAMPC,EAAQC,ICXT,SAAkBP,EAAQZ,EAAaF,GAC5C,IAAMsB,EAAapB,EAAcF,EACjC,OAAOuB,IAAET,GAAQU,MAAMF,GAAYG,KAAKzB,GAAU0B,QDS1BC,CAASb,EAAQZ,EAFxB,IAuBjB,OAnBA0B,qBAAU,WACRC,MACE,oFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlB,EAAUkB,GACVhB,GAAW,GACXC,EAAce,EAAKC,WAEpBC,MAAMC,QAAQC,KAEjBD,QAAQC,IAAIjB,KACX,IAOD,sBAAKd,UAAU,MAAf,UACE,oBAAIgC,MAAO,CAAEC,UAAW,UAAxB,2BACA,sBAAKjC,UAAU,MAAf,UACGU,EAAU,oBAAIsB,MAAO,CAAEC,UAAW,UAAxB,wBAAsD,GAChEnB,EAAMZ,KAAI,SAACgC,GAAD,OACT,sBAAKlC,UAAU,SAAf,UACE,sBAAKgC,MAAO,CAAEG,MAAO,OAAQC,MAAO,OAASpC,UAAU,QAAvD,UACE,uBACEgC,MAAO,CAAEK,WAAY,GAAIC,WAAY,QACrCtC,UAAU,cAFZ,UAIGkC,EAAMA,MAJT,eAMA,sBACEF,MAAO,CACLO,gBAAiBL,EAAMM,OAAO,GAAb,WACTN,EAAMM,OAAO,GAAGC,OACpB,QACJC,QAAS,EACTC,aAAc,MANlB,SASGT,EAAMM,OAAO,GAAKN,EAAMM,OAAO,GAAGI,KAAO,QAG9C,sBAAKZ,MAAO,CAAEK,WAAY,OAA1B,UAAoCH,EAAMW,SAA1C,wBAKN,cAAC,EAAD,CACEpD,WAAYA,EACZC,SAxDW,EAyDXC,iBAtCmB,SAACmD,GACxBjC,EAAeiC,IAsCXlD,YAAaA,QEzDNmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fbed31e6.chunk.js","sourcesContent":["const Pagination = ({\r\n  itemsCount,\r\n  pageSize,\r\n  handlePageChange,\r\n  currentPage,\r\n}) => {\r\n  const pages = Math.ceil(itemsCount / pageSize);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {[...Array(pages)].map((e, i) => (\r\n          <li\r\n            className={i === currentPage ? \"page-item active\" : \"page-item\"}\r\n            key={i}\r\n          >\r\n            <a className=\"page-link\" onClick={() => handlePageChange(i)}>\r\n              {i + 1}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"./components/Pagination\";\nimport _ from \"lodash\";\nimport { paginate } from \"./components/paginate\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nfunction App() {\n  const [issues, setIssues] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [itemsCount, setItemsCount] = useState(0);\n  const pageSize = 8;\n  const [currentPage, setCurrentPage] = useState(0);\n  const issue = cloneDeep(paginate(issues, currentPage, pageSize));\n\n  useEffect(() => {\n    fetch(\n      \"https://api.github.com/repos/facebook/create-react-app/issues?page=1&per_page=30\"\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setIssues(data);\n        setLoading(false);\n        setItemsCount(data.length);\n      })\n      .catch(console.log);\n\n    console.log(issue);\n  }, []);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ textAlign: \"center\" }}>Github Issues</h1>\n      <div className=\"box\">\n        {loading ? <h1 style={{ textAlign: \"center\" }}>loading...</h1> : \"\"}\n        {issue.map((title) => (\n          <div className=\"issues\">\n            <div style={{ float: \"left\", width: \"90%\" }} className=\"issue\">\n              <span\n                style={{ marginLeft: 10, fontWeight: \"bold\" }}\n                className=\"issue-title\"\n              >\n                {title.title} &nbsp;&nbsp;\n              </span>\n              <span\n                style={{\n                  backgroundColor: title.labels[0]\n                    ? `#${title.labels[0].color}`\n                    : \"white\",\n                  padding: 2,\n                  borderRadius: \"5%\",\n                }}\n              >\n                {title.labels[0] ? title.labels[0].name : \"\"}\n              </span>\n            </div>\n            <div style={{ marginLeft: \"90%\" }}>{title.comments} comments</div>\n          </div>\n        ))}\n      </div>\n\n      <Pagination\n        itemsCount={itemsCount}\n        pageSize={pageSize}\n        handlePageChange={handlePageChange}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n//https://api.github.com/repos/facebook/create-react-app/issues?page=1&per_page=30\n","import _ from \"lodash\";\r\n\r\nexport function paginate(issues, currentPage, pageSize) {\r\n  const startIndex = currentPage * pageSize;\r\n  return _(issues).slice(startIndex).take(pageSize).value();\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}